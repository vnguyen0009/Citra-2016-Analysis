setwd("~/work/Data/Citra2016/analysis/TraitCorrelation")
source('~/work/Data/Citra2016/analysis/TraitCorrelation/TraitCorrelation.R')
print(allPlot)
print(seasonPlot)
print(determPlot)
View(DW)
DW$TOTALPOD <- DW$DWAP + DW$DWGP + DW$DWPOD +DW(DW$DWMP)
DW$TOTALPOD <- DW$DWAP + DW$DWGP + DW$DWPOD + DW$DWMP
FH <- DW[DW$HNO==11,]
seed100 <- seed[,c('plot', 'X100SD')]
GH <- flapjack[,c('RIL', 'Fin')]
data <- merge(seed100, FH, all.x=T, by='plot')
DW$TOTALPOD <- colSums(c(DW$DWAP, DW$DWGP, DW$DWPOD, DW$DWMP), na.rm=T)
DW$TOTALPOD <- colSums(DW[,c('DWAP', 'DWGP', 'DWPOD', 'DWMP')], na.rm=T)
DW$TOTALPOD <- colSums(DW[,c('DWAP', 'DWGP', 'DWPOD', 'DWMP')], na.rm=T)
DW$TOTALPOD <- rowSums(DW[,c('DWAP', 'DWGP', 'DWPOD', 'DWMP')], na.rm=T)
seed100 <- seed[,c('plot', 'X100SD')]
GH <- flapjack[,c('RIL', 'Fin')]
data <- merge(seed100, FH, all.x=T, by='plot')
View(data)
DW <- read.csv('DW 4 1 19.csv', row.names=1, na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
seed <- read.csv('FH seed 9 11 18.csv', row.names=1, na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
flapjack <- read.csv('flapjack.csv', na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
DW$TOTALPOD <- rowSums(DW[,c('DWAP', 'DWGP', 'DWPOD', 'DWMP')], na.rm=T)
FH <- DW[DW$HNO==11,]
seed100 <- seed[,c('plot', 'X100SD')]
GH <- flapjack[,c('RIL', 'Fin')]
View(FH)
data <- merge(seed100, FH, all.x=T, by='plot')
View(data)
data <- data[,c(1,2,4:12,15,19,20)]
meanData <- aggregate(data[,c(2:11)], by = list(data$geno, data$site), na.rm=T, FUN=mean)
colnames(meanData)[1:2] <- c('geno', 'site')
meltedData <- melt(meanData, id = c('site', 'geno', 'X100SD'))
wGH <- merge(meltedData, GH, by.x = 'geno', by.y='RIL', all.x=T)
RIL <- wGH[is.na(wGH$Fin)==F,]
p <- ggplot(meltedData)
allPlot <- p + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = meltedData$X100SD,
y = meltedData$value,
#color=as.factor(meltedData$site)),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Total Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Growing Seasons' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~meltedData$variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
seasonPlot <- p + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = meltedData$X100SD,
y = meltedData$value,
color=as.factor(meltedData$site),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Total Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Season' ) +
scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~meltedData$variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
r <- ggplot(RIL)
determPlot <- r + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = X100SD,
y = value,
color=as.factor(Fin),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'RIL Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Fin' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
print(allPlot)
data <- merge(seed100, FH, all.x=T, by='plot')
data <- data[,c(1:4,7, 12,15,19,20)]
data <- merge(seed100, FH, all.x=T, by='plot')
data <- data[,c(1,2,4,7, 12,15,19,20)]
meanData <- aggregate(data[,c(2:11)], by = list(data$geno, data$site), na.rm=T, FUN=mean)
meanData <- aggregate(data[,c(2:11)], by = list(data$geno, data$site), na.rm=T, FUN=mean)
meanData <- aggregate(data[,c(2:5,8)], by = list(data$geno, data$site), na.rm=T, FUN=mean)
View(meanData)
colnames(meanData)[1:2] <- c('geno', 'site')
meltedData <- melt(meanData, id = c('site', 'geno', 'X100SD'))
wGH <- merge(meltedData, GH, by.x = 'geno', by.y='RIL', all.x=T)
RIL <- wGH[is.na(wGH$Fin)==F,]
View(wGH)
p <- ggplot(meltedData)
allPlot <- p + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = meltedData$X100SD,
y = meltedData$value,
#color=as.factor(meltedData$site)),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Total Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Growing Seasons' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~meltedData$variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
seasonPlot <- p + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = meltedData$X100SD,
y = meltedData$value,
color=as.factor(meltedData$site),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Total Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Season' ) +
scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~meltedData$variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
r <- ggplot(RIL)
determPlot <- r + #geom_smooth(aes(x = meltedData$X100SD,
#               y = meltedData$value,
#              color=as.factor(meltedData$site)), se=F) +
geom_point(aes(x = X100SD,
y = value,
color=as.factor(Fin),
alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'RIL Population',
x = '100 Seed Weight (g)',
y = 'Trait Value (g)',
color = 'Fin' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
facet_wrap(~variable, scales='free') +
theme_bw() +
scale_alpha(guide = 'none')
print(allPlot)
print(seasonPlot)
print(determPlot)
dev.off()
pdf(paste(wd, 'out', 'TraitVs100SeedWt.pdf', sep='/'), onefile = T)
print(allPlot)
print(seasonPlot)
print(determPlot)
dev.off()
setwd("~/work/Data/Citra2016/analysis/PCA")
rm(list=ls())
library(devtools)
#install_github("vqv/ggbiplot")
library(dplyr)
library(plyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
DW <- read.csv('DW 4 1 19.csv', row.names=1, na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
seed <- read.csv('FH seed 9 11 18.csv', row.names=1, na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
DW$TOTALPOD <- rowSums(DW[,c('DWAP', 'DWGP', 'DWPOD', 'DWMP')], na.rm=T)
View(DW)
fhDW <- DW[DW$HNO==11,c(1,3:11,17, 19)]
View(fhDW)
dat <- merge(seed[,c('plot', 'geno', 'X100SD', 'site')], fhDW, all=TRUE, by=c('plot'))
View(dat)
all <- na.omit(dat[,c(2,3,4,7,12,15)])
View(all)
all <- na.omit(dat[,c(2:5,7,8,13,15)])
dat.pcs <- prcomp(na.omit(all[,c(2,4:8)]), center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = all$geno)
print(biplot)
print(biplotLabels)
print(biplot)
View(dat.pcs)
View(all)
fhDW <- DW[DW$HNO==11,c(1,3:11,17, 19)]
dat <- merge(seed[,c('plot', 'geno', 'X100SD', 'site')], fhDW, all=TRUE, by=c('plot'))
View(DW)
View(dat)
all <- na.omit(dat[,c(2:5,8,13,15)])
View(dat.pcs)
View(biplot)
View(all)
View(dat)
all <- na.omit(dat[,c(2:5,8,13,15)])
dat.pcs <- prcomp(na.omit(all[,c(2,4:7)]), center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = all$geno)
print(biplot)
View(all)
dat.pcs <- prcomp(all[,c(2,4:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = all$geno)
print(biplot)
print(biplotLabels)
dev.off()
print(biplot)
print(biplotLabels)
meanAll <- aggregate(all[,c(2,4:7)], by=list(all$geno, all$site), na.rm=T, FUN=mean)
View(meanAll)
colnames(meanAll)[1:2] <- c('geno', 'site')
meanAll <- aggregate(all[,c(3:7)], by=list(all$geno, all$site), na.rm=T, FUN=mean)
meanAll <- aggregate(all[,c(2,4:7)], by=list(all$geno, all$site), na.rm=T, FUN=mean)
colnames(meanAll)[1:2] <- c('geno', 'site')
dat.pcs <- prcomp(all[,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = all$geno)
print(biplot)
print(biplotLabels)
dat.pcs <- prcomp(all[,c(3:7)], center = TRUE, scale = TRUE)
dat.pcs <- prcomp(all[,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = meanAll$geno)
print(biplot)
View(dat)
dat.pcs <- prcomp(meanAll[,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = meanAll$geno)
print(biplot)
print(biplotLabels)
setwd(paste(wd,'out', sep='/'))
pdf(file='pcsPlot.pdf', onefile = T, width=10, height=10)
print(biplot)
print(biplotLabels)
dev.off()
dev.off()
summary(dat.pcs)
print(biplot)
dat.pcs <- prcomp(meanAll[meanAll$site==1,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = meanAll$geno)
print(biplot)
print(biplotLabels)
dat.pcs <- prcomp(meanAll[meanAll$site==2,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = meanAll$geno)
print(biplot)
print(biplotLabels)
print(biplot)
dat.pcs <- prcomp(meanAll[,c(3:7)], center = TRUE, scale = TRUE)
summary(dat.pcs)
biplot <- ggbiplot(dat.pcs)
biplotLabels <- ggbiplot(dat.pcs, labels = meanAll$geno)
print(biplotLabels)
print(biplot)
print(biplotLabels)
