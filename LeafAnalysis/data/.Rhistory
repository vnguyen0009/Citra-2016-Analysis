pi
convert.fft(fft(pressure$pressure))
convert.fft <- function(cs, sample.rate=1) {
cs <- cs / length(cs) # normalize
distance.center <- function(c)signif( Mod(c),        4)
angle           <- function(c)signif( 180*Arg(c)/pi, 3)
df <- data.frame(cycle    = 0:(length(cs)-1),
freq     = 0:(length(cs)-1) * sample.rate / length(cs),
strength = sapply(cs, distance.center),
delay    = sapply(cs, angle))
df
}
convert.fft(fft(pressure$pressure))
fft(pressure$pressure)
abs(fft(pressure$pressure))
convert.fft(fft(pressure$pressure))
magnitude <- abs(fft(pressure$pressure))
convert <- convert.fft(fft(pressure$pressure))
View(convert)
N <- 3 #num of harmonics
time = pressure$time
for (ii in 2:N){
Amp <- convert[ii,'strength']
freq <- convert[ii, 'freq']
phi <- convert[ii,'delay']
result <- convert[1,'strength'] + sum(sin(Amp*2*pi*time)*cos(phi) + cos(Amp*2*pi*time)*sin(phi))
}
for (jj in 1:pressure$time){
for (ii in 2:N){
Amp <- convert[ii,'strength']
freq <- convert[ii, 'freq']
phi <- convert[ii,'delay']
result <- convert[1,'strength'] + sum(sin(Amp*2*pi*jj)*cos(phi) + cos(Amp*2*pi*jj)*sin(phi))
}
}
for (jj in 1:length(pressure$time)){
for (ii in 2:N){
Amp <- convert[ii,'strength']
freq <- convert[ii, 'freq']
phi <- convert[ii,'delay']
result <- convert[1,'strength'] + sum(sin(Amp*2*pi*jj)*cos(phi) + cos(Amp*2*pi*jj)*sin(phi))
}
}
plot(pressure$time, pressure$pressure)
pressure = data.frame("time" = seq(0,1,by=0.05),
'pressure' = c(700.2397,
742.2864,
916.9421,
1254.933,
1575.135,
1691.572,
1688.338,
1615.565,
1526.62,
1457.081,
1398.862,
1345.495,
1298.597,
1248.464,
1182.16,
1114.238,
1033.379,
949.2857,
847.4032,
705.0913,
580.5683
))
pressure$time = as.numeric(pressure$time)
fft(pressure$pressure)
# cs is the vector of complex points to convert
convert.fft <- function(cs, sample.rate=1) {
cs <- cs / length(cs) # normalize
distance.center <- function(c)signif( Mod(c),        4)
angle           <- function(c)signif( 180*Arg(c)/pi, 3)
df <- data.frame(cycle    = 0:(length(cs)-1),
freq     = 0:(length(cs)-1) * sample.rate / length(cs),
strength = sapply(cs, distance.center),
delay    = sapply(cs, angle))
df
}
convert <- convert.fft(fft(pressure$pressure))
plot(pressure$time, pressure$pressure)
result <- DC + sum(Amp*sin(wavelength*time+phi))
DC <- convert$strength[1]
for (ii in c(1:21)){
Amp <- convert$strength[1:N]
wavelength <- convert$freq[1:N]
phi <- convert$delay[1:N]
result <- DC + sum(Amp*sin(wavelength*time+phi))
}
for (ii in c(1:21)){
Amp <- convert$strength[1:N]
wavelength <- convert$freq[1:N]
phi <- convert$delay[1:N]
result <- DC + sum(Amp*sin(wavelength*ii+phi))
}
result <- DC + sum(Amp*sin(wavelength*ii+phi))
rm(list = ls())
pressure = data.frame("time" = seq(0,1,by=0.05),
'pressure' = c(700.2397,742.2864,916.9421,1254.933,1575.135,1691.572,
1688.338,1615.565,1526.62,1457.081,1398.862,1345.495,
1298.597,1248.464,1182.16,1114.238,1033.379,949.2857,
847.4032,705.0913,580.5683))
pressure$time = as.numeric(pressure$time)
dr = 0.0001
mu = 2.87E-3 #Pa*s
L = 0.05 #m
R = 0.005 #m
flow <- function(radius, delta_P){
Vz = delta_P/(4*mu*L)*(R^2 - radius^2)
return(Vz)
}
plot(pressure$time, pressure$pressure)
for (ii in seq(0:R,dr)){
Vz = flow(ii, pressure$pressure)
print(Vz)
}
plot(0,0, ylim = c(0,80))
for (ii in seq(0:R,dr)){
Vz = flow(ii, pressure$pressure)
print(Vz)
lines(pressure$time, Vz, col='red')
}
plot(0,0, ylim = c(0,80), xlim = c(0,1))
for (ii in seq(0:R,dr)){
Vz = flow(ii, pressure$pressure)
print(Vz)
lines(pressure$time, Vz, col='red')
}
plot(0,0, ylim = c(0,80), xlim = c(0,1), xlab = 'Time', ylab = 'Velocity')
for (ii in seq(0:R,dr)){
Vz = flow(ii, pressure$pressure)
print(Vz)
lines(pressure$time, Vz, col='red')
}
seq(0:R,dr)
for (ii in seq(0,R,dr)){
Vz = flow(ii, pressure$pressure)
print(Vz)
lines(pressure$time, Vz, col='red')
}
plot(0,0, ylim = c(0,80), xlim = c(0,1), xlab = 'Time', ylab = 'Velocity')
for (ii in seq(0,R,dr)){
Vz = flow(ii, pressure$pressure)/10 #division by 10 to get velocityfrom dynes/cm^2 to m/s
print(Vz)
lines(pressure$time, Vz, col='red')
}
plot(0,0, ylim = c(0,8), xlim = c(0,1), xlab = 'Time', ylab = 'Velocity')
for (ii in seq(0,R,dr)){
Vz = flow(ii, pressure$pressure)/10 #division by 10 to get velocityfrom dynes/cm^2 to m/s
print(Vz)
lines(pressure$time, Vz, col='red')
}
plot(0,0, ylim = c(0,8), xlim = c(0,1), xlab = 'Time (s)', ylab = 'Velocity (m/s)')
for (ii in seq(0,R,dr)){
Vz = flow(ii, pressure$pressure)/10 #division by 10 to get velocityfrom dynes/cm^2 to m/s
print(Vz)
lines(pressure$time, Vz, col='red')
}
setwd("~/work/UF ABE 2014-2019/Data/Citra2016/analysis/LeafAnalysis")
rm(list=ls())
library(dplyr)
library(plyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
dat <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
View(dat)
dat <- dat[,c(1:5)]
View(dat)
View(dat)
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
View(data)
data$Harvest <- gsub("H", "", data$Harvest)
View(data)
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
rm(list=ls())
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd("~/work/UF ABE 2014-2019/Data/Citra2016/analysis/LeafAnalysis")
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
data$Harvest <- gsub("H", "", data$Harvest)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$plot)
data$plot <- as.numeric(data$plot)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$plot)
data[grep('D',data$Plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$Plot)
data$plot <- as.numeric(data$Plot)
rm(list=ls())
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
data$Harvest <- gsub("H", "", data$Harvest)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$Plot),'Dlines'] <- 1
data$Plot <- gsub("[a-zA-Z ]", "", data$Plot)
data$Plot <- as.numeric(data$Plot)
data <- data[is.na(data$plot)==F,]
rm(list=ls())
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
data$Harvest <- gsub("H", "", data$Harvest)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$Plot),'Dlines'] <- 1
data$Plot <- gsub("[a-zA-Z ]", "", data$Plot)
data$Plot <- as.numeric(data$Plot)
data <- data[is.na(data$Plot)==F,]
rm(list=ls())
library(plyr)
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
library(ggbiplot)
wd <- getwd()
setwd(paste(wd,'data', sep='/'))
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
data$HNO <- gsub("H", "", data$Harvest)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$plot)
data$plot <- as.numeric(data$plot)
data <- data[is.na(data$plot)==F,]
data$HNO <- gsub("H", "", data$HNO)
## CATEGORIZE FOR THE DATES
data[data$plot >= 1 & data$plot < 121 & data$Dlines==0,'category'] <- 1
data[data$plot >= 121 & data$plot < 241 & data$Dlines==0,'category'] <- 2
data[data$plot >= 1 & data$plot < 21 & data$Dlines==1,'category'] <- 3
data[data$plot >= 21 & data$plot < 41 & data$Dlines==1,'category'] <- 4
data[(data$plot >= 241 & data$plot < 361 & data$Dlines==0) |
(data$plot > 41 & data$plot < 61 & data$Dlines==1),'category'] <- 5
data[(data$plot >= 361 & data$plot <= 480 & data$Dlines==0) |
(data$plot >= 61 & data$plot <= 80 & data$Dlines==1),'category'] <- 6
data[data$plot==41 & data$Dlines==1,'category'] <- 7
data[(data$plot >= 1 & data$plot < 241 & data$Dlines==0) |
(data$plot >= 1 & data$plot < 41 & data$Dlines==1),'site'] <- 1
data[(data$plot >= 241 & data$plot < 481 & data$Dlines==0) |
(data$plot >= 41 & data$plot < 81 & data$Dlines==1),'site'] <- 2
data <- data[is.na(data$category)==F,]
## SET UP COL FOR PLANTING AND HARVEST DATES
data$pdate <- NA
data$hdate <- NA
data$DAP <- NA
#sample <- data[c(200:210),]
data[data$Dlines==1, 'plot'] <- paste('D',data[data$Dlines==1, 'plot'], sep='')
data$pdate <- apply(data,1,FUN=Pdate)
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
wd <- getwd()
setwd("~/work/UF ABE 2014-2019/Data/Citra2016/analysis/LeafAnalysis")
source(paste(wd,'src', 'Hdate.R', sep='/'))
wd <- getwd()
wd <- getwd()
wd
source(paste(wd,'src', 'Hdate.R', sep='/'))
source(paste(wd,'src', 'Pdate.R', sep='/'))
setwd(paste(wd,'data', sep='/'))
data <- read.csv('parentLeafArea.csv',
na.strings = c('', 'NA', '*', '.', '?'), stringsAsFactors = F)
dates <- read.csv('dates.csv',stringsAsFactors = F)
genoCode <- read.csv('plotToGeno.csv', stringsAsFactors = F)
data <- data[,c(1:5)]
data$HNO <- gsub("H", "", data$HNO)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$plot)
data$plot <- as.numeric(data$plot)
data <- data[is.na(data$plot)==F,]
## CATEGORIZE FOR THE DATES
data[data$plot >= 1 & data$plot < 121 & data$Dlines==0,'category'] <- 1
data[data$plot >= 121 & data$plot < 241 & data$Dlines==0,'category'] <- 2
data[data$plot >= 1 & data$plot < 21 & data$Dlines==1,'category'] <- 3
data[data$plot >= 21 & data$plot < 41 & data$Dlines==1,'category'] <- 4
data[(data$plot >= 241 & data$plot < 361 & data$Dlines==0) |
(data$plot > 41 & data$plot < 61 & data$Dlines==1),'category'] <- 5
data[(data$plot >= 361 & data$plot <= 480 & data$Dlines==0) |
(data$plot >= 61 & data$plot <= 80 & data$Dlines==1),'category'] <- 6
data[data$plot==41 & data$Dlines==1,'category'] <- 7
data[(data$plot >= 1 & data$plot < 241 & data$Dlines==0) |
(data$plot >= 1 & data$plot < 41 & data$Dlines==1),'site'] <- 1
data[(data$plot >= 241 & data$plot < 481 & data$Dlines==0) |
(data$plot >= 41 & data$plot < 81 & data$Dlines==1),'site'] <- 2
data <- data[is.na(data$category)==F,]
## SET UP COL FOR PLANTING AND HARVEST DATES
data$pdate <- NA
data$hdate <- NA
data$DAP <- NA
#sample <- data[c(200:210),]
data[data$Dlines==1, 'plot'] <- paste('D',data[data$Dlines==1, 'plot'], sep='')
data$pdate <- apply(data,1,FUN=Pdate)
data$hdate <- apply(data,1,FUN=Hdate)
data$HNO <- gsub("F", 11, data$HNO)
##Categorize D-lines
data$Dlines <- 0
data[grep('D',data$plot),'Dlines'] <- 1
data$plot <- gsub("[a-zA-Z ]", "", data$plot)
data$plot <- as.numeric(data$plot)
data <- data[is.na(data$plot)==F,]
## CATEGORIZE FOR THE DATES
data[data$plot >= 1 & data$plot < 121 & data$Dlines==0,'category'] <- 1
data[data$plot >= 121 & data$plot < 241 & data$Dlines==0,'category'] <- 2
data[data$plot >= 1 & data$plot < 21 & data$Dlines==1,'category'] <- 3
data[data$plot >= 21 & data$plot < 41 & data$Dlines==1,'category'] <- 4
data[(data$plot >= 241 & data$plot < 361 & data$Dlines==0) |
(data$plot > 41 & data$plot < 61 & data$Dlines==1),'category'] <- 5
data[(data$plot >= 361 & data$plot <= 480 & data$Dlines==0) |
(data$plot >= 61 & data$plot <= 80 & data$Dlines==1),'category'] <- 6
data[data$plot==41 & data$Dlines==1,'category'] <- 7
data[(data$plot >= 1 & data$plot < 241 & data$Dlines==0) |
(data$plot >= 1 & data$plot < 41 & data$Dlines==1),'site'] <- 1
data[(data$plot >= 241 & data$plot < 481 & data$Dlines==0) |
(data$plot >= 41 & data$plot < 81 & data$Dlines==1),'site'] <- 2
data <- data[is.na(data$category)==F,]
## SET UP COL FOR PLANTING AND HARVEST DATES
data$pdate <- NA
data$hdate <- NA
data$DAP <- NA
#sample <- data[c(200:210),]
data[data$Dlines==1, 'plot'] <- paste('D',data[data$Dlines==1, 'plot'], sep='')
data$pdate <- apply(data,1,FUN=Pdate)
data$hdate <- apply(data,1,FUN=Hdate)
FHdates <- read.csv('FH dates.csv', stringsAsFactors = F)
data$hdate <- apply(data,1,FUN=Hdate)
data$pdate <- as.Date(data$pdate, tryFormats = c("%m/%d/%Y"))
data$hdate <- as.character(data$hdate)
data$hdate <- as.Date(data$hdate, tryFormats = c("%m/%d/%Y"))
data$DAP <- data$hdate - data$pdate
data <- merge(data, genoCode, all.x=T)
View(data)
unifoliates <- data[data$Code=="PL1",]
View(unifoliates)
unifoliates <- data[data$Code=="PL1" & data$geno=="CAL",]
View(unifoliates)
unifoliates <- data[data$Code=="V1" & data$geno=="CAL",]
View(unifoliates)
leaf <- data[data$Code=="V1" & data$geno=="CAL",]
plot(leaf$DAP, leaf$cm.2)
leaf <- data[data$Code=="V1" & data$geno=="CAL" & data$site==1,]
plot(leaf$DAP, leaf$cm.2)
leaf <- data[data$Code=="V2" & data$geno=="CAL" & data$site==1,]
plot(leaf$DAP, leaf$cm.2)
leaf <- data[data$Code=="V3" & data$geno=="CAL" & data$site==1,]
plot(leaf$DAP, leaf$cm.2)
p <- ggplot(data)
plot1 <- p + geom_smooth(aes(x = data$DAP,
y = data$cm.2,
color=as.factor(data$code)), se=F) +
geom_point(aes(x= data$DAP,
y = data$cm.2,
color=as.factor(data$code), alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Leaf Area',
x = 'Days after Planting (DAP)',
y = 'Leaf Area (cm^2)',
color = 'Leaf Position' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
#facet_wrap(~parentMeans$geno) +
theme_bw() +
scale_alpha(guide = 'none')
print(plot1)
data$DAP <- as.numeric(data$DAP)
p <- ggplot(data)
plot1 <- p + geom_smooth(aes(x = data$DAP,
y = data$cm.2,
color=as.factor(data$code)), se=F) +
geom_point(aes(x= data$DAP,
y = data$cm.2,
color=as.factor(data$code), alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Leaf Area',
x = 'Days after Planting (DAP)',
y = 'Leaf Area (cm^2)',
color = 'Leaf Position' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
#facet_wrap(~parentMeans$geno) +
theme_bw() +
scale_alpha(guide = 'none')
print(plot1)
View(data)
plot1 <- p + geom_smooth(aes(x = data$DAP,
y = data$cm.2,
color=as.factor(data$Code)), se=F) +
geom_point(aes(x= data$DAP,
y = data$cm.2,
color=as.factor(data$Code), alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Leaf Area',
x = 'Days after Planting (DAP)',
y = 'Leaf Area (cm^2)',
color = 'Leaf Position' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
#facet_wrap(~parentMeans$geno) +
theme_bw() +
scale_alpha(guide = 'none')
print(plot1)
print(plot1)
dev.off()
print(plot1)
dev.off()
print(plot1)
p <- ggplot(data)
plot1 <- p + geom_smooth(aes(x = data$DAP,
y = data$cm.2,
color=as.factor(data$Code)), se=F) +
geom_point(aes(x= data$DAP,
y = data$cm.2,
color=as.factor(data$Code), alpha=0.5)) +
coord_cartesian(ylim = c()) +
theme(legend.position = "bottom")+
labs(title = 'Leaf Area',
x = 'Days after Planting (DAP)',
y = 'Leaf Area (cm^2)',
color = 'Leaf Position' ) +
#scale_fill_discrete(name = 'Growing Seasons') +
#facet_wrap(~parentMeans$geno) +
theme_bw() +
scale_alpha(guide = 'none')
print(plot1)
View(dates)
View(data)
p <- ggplot(data)
plot1 <- p + geom_smooth(aes(x = data$DAP,
y = data$cm.2,
color=as.factor(data$Code)), se=F) +
geom_point(aes(x= data$DAP,
y = data$cm.2,
color=as.factor(data$Code), alpha=0.5)) #+
print(plot1)
